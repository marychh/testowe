//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MaryKayCustomers
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MaryKayCustomersEntities : DbContext
    {
        public MaryKayCustomersEntities()
            : base("name=MaryKayCustomersEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Customers> Customers { get; set; }
    
        public virtual ObjectResult<SelectforId_Result> SelectforId(Nullable<int> id_customers)
        {
            var id_customersParameter = id_customers.HasValue ?
                new ObjectParameter("id_customers", id_customers) :
                new ObjectParameter("id_customers", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectforId_Result>("SelectforId", id_customersParameter);
        }
    
        public virtual int DeleteforId(Nullable<int> id_customers)
        {
            var id_customersParameter = id_customers.HasValue ?
                new ObjectParameter("id_customers", id_customers) :
                new ObjectParameter("id_customers", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteforId", id_customersParameter);
        }
    
        public virtual int UpdateCustomers(Nullable<int> id_customers, string name, string address, string phone, string husbentphone, string email, Nullable<System.DateTime> dateofbrith, string product, Nullable<System.DateTime> buydate)
        {
            var id_customersParameter = id_customers.HasValue ?
                new ObjectParameter("id_customers", id_customers) :
                new ObjectParameter("id_customers", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var husbentphoneParameter = husbentphone != null ?
                new ObjectParameter("husbentphone", husbentphone) :
                new ObjectParameter("husbentphone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var dateofbrithParameter = dateofbrith.HasValue ?
                new ObjectParameter("dateofbrith", dateofbrith) :
                new ObjectParameter("dateofbrith", typeof(System.DateTime));
    
            var productParameter = product != null ?
                new ObjectParameter("product", product) :
                new ObjectParameter("product", typeof(string));
    
            var buydateParameter = buydate.HasValue ?
                new ObjectParameter("buydate", buydate) :
                new ObjectParameter("buydate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCustomers", id_customersParameter, nameParameter, addressParameter, phoneParameter, husbentphoneParameter, emailParameter, dateofbrithParameter, productParameter, buydateParameter);
        }
    }
}
